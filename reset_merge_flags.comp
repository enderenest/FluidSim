#version 430

struct ParticleValues {
	float mass;
	float density;
	float nearDensity;
	float particleRadius;
	uint mergeFlag;
	uint tag; // 0 = KEEP, 1 = SPLIT, 2 = MERGE

	// Padding to ensure the struct is 16 bytes aligned
	float padding1;     
	float padding2;
};

struct SimulationParameters {
	float dt;
	float gravityAcceleration;
	float mass;
	float collisionDamping;
	float smoothingRadius;
	float targetDensity;
	float pressureMultiplier;
	float viscosityStrength;
	float nearDensityMultiplier;
	uint isInteracting;
	uint isPaused;
	float inputPositionX;
	float inputPositionY;
	float inputPositionZ;
	float interactionRadius;
	float interactionStrength;

	uint particleCount;
	uint paddedParticleCount;
	uint hashSize;
	float spacing;
	float particleRadius;
	float boundaryX;
	float boundaryY;
	float boundaryZ;
};

layout(local_size_x=512) in;

layout(std430, binding = 1) buffer ValueData { ParticleValues valData[]; };
layout(std430, binding = 6) buffer SimParamsBuffer { SimulationParameters sim; };

void main() {
  uint i = gl_GlobalInvocationID.x;
  if (i >= sim.particleCount) return;

  valData[i].mergeFlag = 0u;
}
