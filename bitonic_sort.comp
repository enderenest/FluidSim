#version 430 core

struct Entry {
	int index;
	uint key;
};

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 6) buffer SpatialLookup { Entry spatialLookup[]; };

uniform int groupWidth;
uniform int groupHeight;
uniform int ascending; // 1 for ascending sort, 0 for descending

void main() {
    uint idx = gl_GlobalInvocationID.x;
    uint pair = idx;

    uint first = (pair / groupWidth) * groupWidth + (pair % (groupWidth / 2));
    uint second = first + groupWidth / 2;

    if (first >= spatialLookup.length()) return;
    if (second >= spatialLookup.length()) return;

    uint keyFirst = spatialLookup[first].key;
    uint keySecond = spatialLookup[second].key;

    bool swap = (ascending == 1 && keyFirst > keySecond) ||
                (ascending == 0 && keyFirst < keySecond);

    if (swap) {
        uint tmpKey = spatialLookup[first].key;
        spatialLookup[first].key = spatialLookup[second].key;
        spatialLookup[second].key = tmpKey;

        int tmpIndex = spatialLookup[first].index;
        spatialLookup[first].index = spatialLookup[second].index;
        spatialLookup[second].index = tmpIndex;
    }
}
