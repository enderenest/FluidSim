#version 430 core

struct Entry {
    int index;
    uint key;
};

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 6) buffer SpatialLookup { Entry spatialLookup[]; };
layout(std430, binding = 7) buffer StartIndices { uint startIndices[]; };
layout(std430, binding = 8) buffer SimulationParameters {
    float dt;
    float gravityAcceleration;
    float mass;
    float collisionDamping;
    float smoothingRadius;
    float targetDensity;
    float pressureMultiplier;
    float viscosityStrength;
    float nearDensityMultiplier;
    uint isInteracting;
    uint isPaused;
    float inputPositionX, inputPositionY, inputPositionZ;
    float interactionRadius; 
    float interactionStrength;
    uint particleCount;
    uint hashSize;
    float spacing;
    float particleRadius;
    float boundaryX, boundaryY, boundaryZ;
};

const uint MAX_INT = 0xffffffffu;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= particleCount) return;

    uint key = spatialLookup[idx].key;
    uint keyPrev = (idx > 0) ? spatialLookup[idx - 1].key : MAX_INT;
    if (key != keyPrev) {
        startIndices[key] = idx;
    }
}