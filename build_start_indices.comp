#version 430 core

struct Entry {
    int index;
    uint key;
};

struct SimulationParameters {
	float dt;
	float gravityAcceleration;
	float mass;
	float collisionDamping;
	float smoothingRadius;
	float targetDensity;
	float pressureMultiplier;
	float viscosityStrength;
	float nearDensityMultiplier;
	uint isInteracting;
	uint isPaused;
	float inputPositionX;
	float inputPositionY;
	float inputPositionZ;
	float interactionRadius;
	float interactionStrength;

	uint particleCount;
	uint paddedParticleCount;
	uint hashSize;
	float spacing;
	float particleRadius;
	float boundaryX;
	float boundaryY;
	float boundaryZ;
};

layout(local_size_x = 512, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 4) buffer SpatialLookup { Entry spatialLookup[]; };
layout(std430, binding = 5) buffer StartIndices { uint startIndices[]; };
layout(std430, binding = 6) buffer SimParamsBuffer { SimulationParameters sim; };

const uint MAX_INT = 0xffffffffu;

void main() {
    uint idx = gl_GlobalInvocationID.x;
    if (idx >= sim.particleCount) return;

    uint key = spatialLookup[idx].key;
    if (key == MAX_INT) return;
    uint keyPrev = (idx > 0) ? spatialLookup[idx - 1].key : MAX_INT;
    if (key != keyPrev) {
        startIndices[key] = idx;
    }
}